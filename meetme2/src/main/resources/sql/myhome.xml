<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Myhomes">
	<select id="info" resultType="myhome" parameterType="String">
		select *
		from mm_myhome where user_num = (select user_num from mm_user where
		user_id=#{user_id})
	</select>

	<select id="AllboardCount" resultType="int"
		parameterType="String">
		select count(*)
		from mm_board
		where to_date(board_date,
		'yy/mm/dd') like #{month}
	</select>

	<select id="AlldayCount" resultType="int" parameterType="String">
		select
		count(*)
		from mm_board
		where to_date(board_date, 'yy/mm/dd') like #{day}
	</select>
	<select id="search" parameterType="map" resultType="user">
		select DISTINCT * from MM_MYHOME h
		left join MM_HASHTAG_USE u
		on(H.MYHOME_NUM = u.MYHOME_NUM)
		left join mm_user us
		on(h.user_num =
		us.USER_NUM)
		<where>
			<if test="keyword!='%null%'">
				(upper(MYHOME_INTRO) like upper(#{keyword})
				OR
				upper(USER_ID) like upper(#{keyword})
				OR upper(USER_NAME) like
				upper(#{keyword}))
			</if>
			<if test="hashtag!='null'">
				AND u.HASHTAG_NUM = #{hashtag}
			</if>
			<if test="searchUser!='%null%'">
				AND (upper(USER_ID) like upper(#{searchUser})
				OR
				upper(USER_NAME) like upper(#{searchUser}))
			</if>
		</where>
	</select>

	<select id="searchHash" parameterType="String" resultType="user">
		select u.* from MM_USER u
		left join MM_MYHOME m
		on(m.USER_NUM =
		u.USER_NUM)
		left join MM_HASHTAG_USE
		using(MYHOME_NUM)
		left join
		MM_HASHTAG
		using(HASHTAG_NUM)
		where upper(HASHTAG_TITLE) like #{hashtag}
	</select>

	<update id="update" parameterType="myhome">
		update mm_myhome set
		myhome_intro=#{myhome_intro}, myhome_bgm=#{myhome_bgm}
		where
		myhome_num=#{myhome_num}
	</update>

	<insert id="board_insert" parameterType="board">
		<selectKey resultType="int" order="BEFORE"
			keyProperty="BOARD_NUM">
			select nvl(max(BOARD_NUM),0)+1 from MM_BOARD
		</selectKey>
		insert into MM_BOARD values(#{MYHOME_NUM},#{BOARD_NUM},
		#{BOARD_ID},'',#{BOARD_TITLE},#{BOARD_CONTENT},#{BOARD_PHOTO,
		jdbcType=VARCHAR},
		#{BOARD_ORIGINAL, jdbcType=VARCHAR},sysdate)
	</insert>

	<select id="board_count" parameterType="String" resultType="int">
		select
		count(*) from mm_board where BOARD_ID=#{u_id}
	</select>

	<select id="board_list" parameterType="java.util.Map"
		resultType="Board">
		select * from (select
		rownum rnum, b.* from (select * from
		mm_board where
		BOARD_ID=#{u_id}
		order by BOARD_NUM desc) b) where rnum
		&gt;=#{start}
		and rnum &lt;=#{end}
	</select>

	<select id="board_detail" resultType="Board" parameterType="int">
		select *
		from mm_board where BOARD_NUM = #{num}
	</select>

	<update id="board_modify" parameterType="Board">
		update mm_board set
		BOARD_TITLE=#{BOARD_TITLE},
		BOARD_CONTENT=#{BOARD_CONTENT},
		BOARD_PHOTO=#{BOARD_PHOTO, jdbcType=VARCHAR},
		BOARD_ORIGINAL=#{BOARD_ORIGINAL, jdbcType=VARCHAR}
		where
		BOARD_NUM=#{BOARD_NUM}
	</update>

	<select id="comment_list" parameterType="int"
		resultType="comment">
		select * from mm_comment where BOARD_USER_NUM =
		#{board_user_num}
	</select>

	<!-- <insert id="comment_insert" parameterType="comment"> <selectKey resultType="int" 
		order="BEFORE" keyProperty="COMMENT_NUM"> select nvl(max(COMMENT_NUM),0)+1 
		from MM_COMMENT </selectKey> insert into mm_comment values(#{COMMENT_NUM},#{USER_NUM},#{BOARD_USER_NUM},#{COMMENT_CONTENT},sysdate,#{BOARD_NUM}) 
		</insert> -->
	<insert id="comment_insert" parameterType="comment">
		insert into mm_comment
		values( (select nvl(max(COMMENT_NUM),0)+1 from
		MM_COMMENT),#{USER_NUM},#{BOARD_USER_NUM},#{COMMENT_CONTENT},sysdate,#{BOARD_NUM})
	</insert>


	<delete id="comment_delete" parameterType="int">
		delete from mm_comment
		where COMMENT_NUM = #{COMMENT_NUM}
	</delete>

	<update id="comment_update" parameterType="comment">
		update mm_comment set
		COMMENT_CONTENT = #{COMMENT_CONTENT} where COMMENT_NUM =
		#{COMMENT_NUM}
	</update>

	<select id="sendmessage" parameterType="int"
		resultType="message">
		select m.*, u.user_name receiver_name
		from mm_message m,
		mm_user u where m.receiver_id=u.user_num and
		sender_id=#{u_num} order by sent_date desc
	</select>

	<select id="receivemessage" parameterType="int"
		resultType="message">
		select m.*, u.user_name sender_name
		from mm_message m,
		mm_user u where m.sender_id=u.user_num and
		receiver_id=#{u_num} order by sent_date desc
	</select>

</mapper>


